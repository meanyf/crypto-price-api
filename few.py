import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–æ–º
API_BASE_URL = "http://localhost:8000"
USERNAME = "johndoe"
PASSWORD = "secret"  # –ü–∞—Ä–æ–ª—å –∏–∑ –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö


def get_access_token():
    """
    –ü–æ–ª—É—á–∞–µ—Ç access token —Å —Å–µ—Ä–≤–µ—Ä–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    """
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        response = requests.post(
            f"{API_BASE_URL}/token",
            data={"username": USERNAME, "password": PASSWORD},
            headers={"Content-Type": "application/x-www-form-urlencoded"},
        )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if response.status_code == 200:
            token_data = response.json()
            access_token = token_data.get("access_token")
            token_type = token_data.get("token_type")

            print("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!")
            print(f"–¢–æ–∫–µ–Ω: {access_token}")
            print(f"–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: {token_type}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
            token_info = {
                "access_token": access_token,
                "token_type": token_type,
                "username": USERNAME,
                "obtained_at": datetime.now().isoformat(),
            }

            with open("token.json", "w") as f:
                json.dump(token_info, f, indent=2)
            print("‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ token.json")

            return access_token
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {response.status_code}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {response.text}")
            return None

    except requests.exceptions.ConnectionError:
        print(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä FastAPI –∑–∞–ø—É—â–µ–Ω."
        )
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: uvicorn main:app --reload")
        return None
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return None


def test_protected_endpoints(access_token):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö endpoint'–∞—Ö
    """
    if not access_token:
        return

    headers = {"Authorization": f"Bearer {access_token}"}

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint /users/me/
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint /users/me/")
    try:
        response = requests.get(f"{API_BASE_URL}/users/me/", headers=headers)

        if response.status_code == 200:
            user_data = response.json()
            print("‚úÖ Endpoint /users/me/ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {json.dumps(user_data, indent=2)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /users/me/: {e}")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint /users/me/items/
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint /users/me/items/")
    try:
        response = requests.get(f"{API_BASE_URL}/users/me/items/", headers=headers)

        if response.status_code == 200:
            items_data = response.json()
            print("‚úÖ Endpoint /users/me/items/ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"–î–∞–Ω–Ω—ã–µ items: {json.dumps(items_data, indent=2)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /users/me/items/: {e}")


if __name__ == "__main__":
    print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ access token...")
    print("–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"Username: {USERNAME}")
    print(f"Password: {PASSWORD}")
    print("-" * 50)

    token = get_access_token()

    if token:
        print("\n" + "=" * 50)
        test_protected_endpoints(token)
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")
